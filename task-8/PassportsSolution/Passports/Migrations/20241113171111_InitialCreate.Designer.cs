// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Passports.Database;

#nullable disable

namespace Passports.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241113171111_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Passports.Models.Passport", b =>
                {
                    b.Property<short>("Series")
                        .HasColumnType("smallint")
                        .HasColumnName("passp_series");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("passp_number");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.HasKey("Series", "Number");

                    b.ToTable("inactivepassports", (string)null);
                });

            modelBuilder.Entity("Passports.Models.PassportHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActiveEnd")
                        .HasColumnType("date")
                        .HasColumnName("active_end");

                    b.Property<DateTime>("ActiveStart")
                        .HasColumnType("date")
                        .HasColumnName("active_start");

                    b.Property<int>("PassportsNumber")
                        .HasColumnType("integer")
                        .HasColumnName("passp_number");

                    b.Property<short>("PassportsSeries")
                        .HasColumnType("smallint")
                        .HasColumnName("passp_series");

                    b.HasKey("Id");

                    b.HasIndex("PassportsSeries", "PassportsNumber");

                    b.ToTable("passporthistory", (string)null);
                });

            modelBuilder.Entity("Passports.Models.PassportHistory", b =>
                {
                    b.HasOne("Passports.Models.Passport", "Passport")
                        .WithMany("PassportHistories")
                        .HasForeignKey("PassportsSeries", "PassportsNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passport");
                });

            modelBuilder.Entity("Passports.Models.Passport", b =>
                {
                    b.Navigation("PassportHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
